{"ast":null,"code":"import _slicedToArray from \"/Users/heonmac/GoogleDrive/WorkSpace/Web/mytoday/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/heonmac/GoogleDrive/WorkSpace/Web/mytoday/client/src/App.js\";\nimport React from 'react';\nimport './App.css'; //제작한 리엑트 컴포넌트\n\nimport UserRegister from './components/UserRegister';\nimport Users from './components/Users'; //마테리얼 ui 컴포넌트들\n\nimport { Paper, Table, TableHead, TableBody, TableRow, TableCell, Typography, AppBar, Toolbar, IconButton, Divider, Drawer } from '@material-ui/core';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Hidden from '@material-ui/core/Hidden';\nimport MenuIcon from '@material-ui/icons/Menu'; // import SearchIcon from '@material-ui/icons/Search'\n\nimport { withStyles } from '@material-ui/core/styles';\nimport { fade } from '@material-ui/core/styles/colorManipulator';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport { style } from '@material-ui/system';\n\nfunction App(props) {\n  const container = props.container;\n  const classes = useStyles();\n  const theme = useTheme();\n\n  const _React$useState = React.useState(false),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        drawerOpen = _React$useState2[0],\n        setDrawerOpen = _React$useState2[1];\n\n  const _React$useState3 = React.useState(''),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        users = _React$useState4[0],\n        setUsers = _React$useState4[1];\n\n  const handleDrawerToggle = () => {\n    setDrawerOpen(!drawerOpen);\n  };\n\n  const drawer = React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.toolbar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }), React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }), React.createElement(List, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(ListItem, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  })), React.createElement(List, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, ['Diary', 'To-Do', 'Calender'].map((text, index) => React.createElement(ListItem, {\n    button: true,\n    key: text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(ListItemText, {\n    primary: text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  })))));\n\n  const stateRefresh = () => {\n    setUsers('');\n    callApi().then(res => {\n      setUsers(res);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const callApi = async () => {\n    const response = await fetch('/api/users');\n    const body = await response.json();\n    return body;\n  };\n\n  const userCellList = [\"아이디\", \"이메일\", \"이름\"];\n  return React.createElement(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(AppBar, {\n    className: classes.appBar,\n    position: \"static\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(Toolbar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    className: classes.menuButton,\n    color: \"inherit\",\n    \"aria-label\": \"Open drawer\",\n    onClick: handleDrawerToggle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(MenuIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  })), React.createElement(Typography, {\n    className: classes.title,\n    variant: \"h6\",\n    color: \"inherit\",\n    noWrap: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, \"MyToday\"), React.createElement(\"div\", {\n    className: classes.menu,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }))), React.createElement(\"nav\", {\n    className: classes.drawer,\n    \"aria-label\": \"mailbox folders\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(Hidden, {\n    smUp: true,\n    implementation: \"css\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(Drawer, {\n    container: container,\n    variant: \"temporary\",\n    anchor: theme.direction === 'rtl' ? 'right' : 'left',\n    open: drawerOpen,\n    onClose: handleDrawerToggle,\n    classes: {\n      paper: classes.drawerPaper\n    },\n    ModalProps: {\n      keepMounted: true // Better open performance on mobile.\n\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, drawer)), React.createElement(Hidden, {\n    xsDown: true,\n    implementation: \"css\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, React.createElement(Drawer, {\n    classes: {\n      paper: classes.drawerPaper\n    },\n    variant: \"permanent\",\n    open: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, drawer))), React.createElement(\"main\", {\n    className: classes.content,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.toolbar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, React.createElement(Paper, {\n    className: classes.paper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, React.createElement(Table, {\n    className: classes.table,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, React.createElement(TableHead, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, userCellList.map(u => {\n    return React.createElement(TableCell, {\n      className: classes.tableHead,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, u);\n  }))), React.createElement(TableBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, users ? users.map(u => {\n    return React.createElement(Users, {\n      id: u.user_id,\n      email: u.user_email,\n      name: u.user_name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    });\n  }) : ''))))));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/heonmac/GoogleDrive/WorkSpace/Web/mytoday/client/src/App.js"],"names":["React","UserRegister","Users","Paper","Table","TableHead","TableBody","TableRow","TableCell","Typography","AppBar","Toolbar","IconButton","Divider","Drawer","List","ListItem","ListItemText","Hidden","MenuIcon","withStyles","fade","makeStyles","useTheme","style","App","props","container","classes","useStyles","theme","useState","drawerOpen","setDrawerOpen","users","setUsers","handleDrawerToggle","drawer","toolbar","map","text","index","stateRefresh","callApi","then","res","catch","err","console","log","response","fetch","body","json","userCellList","root","appBar","menuButton","title","menu","direction","paper","drawerPaper","keepMounted","content","table","u","tableHead","user_id","user_email","user_name"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\n//제작한 리엑트 컴포넌트\nimport UserRegister from './components/UserRegister';\nimport Users from './components/Users';\n\n//마테리얼 ui 컴포넌트들\nimport {Paper, Table, TableHead, TableBody, TableRow, TableCell, Typography, AppBar, Toolbar, IconButton, Divider, Drawer,} from '@material-ui/core';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Hidden from '@material-ui/core/Hidden';\n\nimport MenuIcon from '@material-ui/icons/Menu'\n// import SearchIcon from '@material-ui/icons/Search'\nimport {withStyles} from '@material-ui/core/styles';\nimport { fade } from '@material-ui/core/styles/colorManipulator';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport { style } from '@material-ui/system';\n\nfunction App(props){\n  const { container } = props;\n  const classes = useStyles();\n  const theme = useTheme();\n  const [drawerOpen, setDrawerOpen] = React.useState(false);\n  const [users, setUsers] = React.useState('');\n\n  const handleDrawerToggle = () =>{\n    setDrawerOpen(!drawerOpen);\n  }; \n\n  const drawer = (\n    <div>\n      <div className={classes.toolbar} />\n      <Divider/>\n      <List>\n        <ListItem>\n\n        </ListItem>\n      </List>\n      <List>\n        {['Diary', 'To-Do', 'Calender'].map((text, index) => (\n          <ListItem button key={text}>\n            <ListItemText primary={text}/>\n          </ListItem>\n        ))}\n      </List>\n    </div>\n  );\n\n  const stateRefresh= () =>{\n      setUsers('');\n      callApi().then((res) => {\n        setUsers(res);\n      }).catch((err)=>{console.log(err)});\n    }\n \n    \n\n  const callApi = async () => {\n    const response = await fetch('/api/users');\n    const body = await response.json();\n    return body;\n  }\n  const userCellList = [\"아이디\", \"이메일\", \"이름\"]\n\n  return(\n\n    <div className={classes.root}>\n        <AppBar className={classes.appBar} position=\"static\">\n          <Toolbar>\n            <IconButton  className={classes.menuButton} color=\"inherit\" aria-label=\"Open drawer\" onClick={handleDrawerToggle}>\n              <MenuIcon/>\n            </IconButton>\n            <Typography className={classes.title} variant=\"h6\" color=\"inherit\" noWrap>\n              MyToday\n            </Typography>\n            <div className={classes.menu}>\n            </div>\n          </Toolbar>\n        </AppBar>\n        <nav className={classes.drawer} aria-label=\"mailbox folders\">\n          {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\n          <Hidden smUp implementation=\"css\">\n            <Drawer\n              container={container}\n              variant=\"temporary\"\n              anchor={theme.direction === 'rtl' ? 'right' : 'left'}\n              open={drawerOpen}\n              onClose={handleDrawerToggle}\n              classes={{\n                paper: classes.drawerPaper,\n              }}\n              ModalProps={{\n                keepMounted: true, // Better open performance on mobile.\n              }}\n            >\n              {drawer}\n            </Drawer>\n          </Hidden>\n          <Hidden xsDown implementation=\"css\">\n            <Drawer\n              classes={{\n                paper: classes.drawerPaper,\n              }}\n              variant=\"permanent\"\n              open\n            >\n              {drawer}\n            </Drawer>\n          </Hidden>\n        </nav>\n        <main className={classes.content}>\n          <div className={classes.toolbar}>\n            <Paper className={classes.paper}>\n              <Table className={classes.table}> \n                <TableHead>\n                    <TableRow>\n                        {userCellList.map(u =>{\n                          return <TableCell className={classes.tableHead}>{u}</TableCell>\n                        })}\n                    </TableRow>\n                </TableHead>\n                  <TableBody>\n                    {users ? users.map(u => {\n                      return <Users id={u.user_id}  email={u.user_email} name={u.user_name} />\n                      }) : ''}\n                  </TableBody>\n                </Table>\n            </Paper>\n          </div>\n        </main>\n        \n      </div>\n  );\n}\n\nexport default App;\n\n"]},"metadata":{},"sourceType":"module"}