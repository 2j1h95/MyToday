{"ast":null,"code":"var _jsxFileName = \"/Users/heonmac/GoogleDrive/WorkSpace/Web/mytoday/client/src/components/UserRegister.js\";\nimport React, { Component } from 'react';\nimport { post } from 'axios';\n\nclass UserRegister extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: '',\n      pass: '',\n      pass_confirm: '',\n      email: '',\n      name: '',\n      pass_same: false\n    };\n    this.handleFormSubmit = this.handleFormSubmit.bind(this);\n    this.handleValueChange = this.handleValueChange.bind(this);\n    this.addUser = this.addUser.bind(this);\n  }\n\n  handleFormSubmit(e) {\n    e.preventDefault();\n    this.addUser().then(response => {\n      console.log(response.data);\n    });\n  }\n\n  handleValueChange(e) {\n    let nextState = {};\n    nextState[e.target.name] = e.target.value;\n    this.setState(nextState);\n  }\n\n  addUser() {\n    const url = '/api/users';\n    const formData = new FormData();\n\n    if (this.state.pass !== this.state.pass_confirm) {\n      alert('비밀번호를 똑같이 입력해주세요');\n    } else {\n      formData.append('id', this.state.id);\n      formData.append('password', this.state.pass);\n      formData.append('email', this.state.email);\n      formData.append('name', this.state.name);\n    }\n\n    const config = {\n      headers: {\n        'content-type': 'multipart/form-data'\n      }\n    };\n    return post(url, formData, config);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"RegisterForm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.handleFormSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"\\uD68C\\uC6D0\\uAC00\\uC785\"), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"id\",\n      placeholder: \"id\",\n      value: this.state.id,\n      onChange: this.handleValueChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"password\",\n      name: \"pass\",\n      placeholder: \"password\",\n      value: this.state.pass,\n      onChange: this.handleValueChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"password\",\n      name: \"pass_confirm\",\n      placeholder: \"confirm your password\",\n      value: this.state.pass_confirm,\n      onChange: this.handleValueChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"email\",\n      name: \"email\",\n      placeholder: \"email\",\n      value: this.state.email,\n      onChange: this.handleValueChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"name\",\n      placeholder: \"name\",\n      value: this.state.name,\n      onChange: this.handleValueChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"\\uAC00\\uC785\\uD558\\uAE30\")));\n  }\n\n}\n\nexport default UserRegister;","map":{"version":3,"sources":["/Users/heonmac/GoogleDrive/WorkSpace/Web/mytoday/client/src/components/UserRegister.js"],"names":["React","Component","post","UserRegister","constructor","props","state","id","pass","pass_confirm","email","name","pass_same","handleFormSubmit","bind","handleValueChange","addUser","e","preventDefault","then","response","console","log","data","nextState","target","value","setState","url","formData","FormData","alert","append","config","headers","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {post} from 'axios'\n\nclass UserRegister extends Component{\n    constructor(props){\n        super(props);\n        this.state ={\n            id:'',\n            pass:'',\n            pass_confirm:'',\n            email:'',\n            name:'',\n            pass_same:false\n        }\n        this.handleFormSubmit = this.handleFormSubmit.bind(this)\n        this.handleValueChange = this.handleValueChange.bind(this)\n        this.addUser = this.addUser.bind(this)\n    }\n\n    handleFormSubmit(e){\n        e.preventDefault()\n        this.addUser().then((response)=>{\n            console.log(response.data);\n        })\n    }\n\n    handleValueChange(e) {\n        let nextState = {};\n        nextState[e.target.name] = e.target.value;\n        this.setState(nextState);\n    }\n    \n    addUser(){\n        const url = '/api/users'\n        const formData = new FormData();\n        if(this.state.pass !== this.state.pass_confirm){\n            alert('비밀번호를 똑같이 입력해주세요');\n        }else{\n            formData.append('id', this.state.id);\n            formData.append('password', this.state.pass);\n            formData.append('email', this.state.email);\n            formData.append('name', this.state.name);\n        }\n        const config ={\n            headers:{\n                'content-type':'multipart/form-data'\n            }\n        }\n        return post(url,formData,config)\n    }\n\n    render(){\n        return(\n            <div className='RegisterForm'>\n                <form onSubmit={this.handleFormSubmit}>\n                    <h1>회원가입</h1>\n                    <input type=\"text\" name='id' placeholder='id' value={this.state.id} onChange={this.handleValueChange}></input>\n                    <input type=\"password\" name='pass' placeholder='password' value={this.state.pass} onChange={this.handleValueChange}></input>\n                    <input type=\"password\" name='pass_confirm' placeholder='confirm your password' value={this.state.pass_confirm} onChange={this.handleValueChange}></input>\n                    <input type=\"email\" name='email' placeholder='email' value={this.state.email}  onChange={this.handleValueChange}></input>\n                    <input type=\"text\" name='name' placeholder='name' value={this.state.name} onChange={this.handleValueChange}></input>\n                    <button type=\"submit\">가입하기</button>\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default UserRegister"]},"metadata":{},"sourceType":"module"}