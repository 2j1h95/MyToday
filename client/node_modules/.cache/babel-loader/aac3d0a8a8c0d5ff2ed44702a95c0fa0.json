{"ast":null,"code":"var _jsxFileName = \"/Users/heonmac/GoogleDrive/WorkSpace/Web/mytoday/client/src/components/UserRegister.js\";\nimport React, { Component } from 'react';\nimport { post } from 'axios';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst style = theme => ({\n  hidden: {\n    display: 'none'\n  }\n});\n\nclass UserRegister extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: '',\n      pass: '',\n      pass_confirm: '',\n      email: '',\n      name: '',\n      pass_same: false,\n      open: false\n    };\n    this.handleFormSubmit = this.handleFormSubmit.bind(this);\n    this.handleValueChange = this.handleValueChange.bind(this);\n    this.addUser = this.addUser.bind(this);\n  }\n\n  handleFormSubmit(e) {\n    e.preventDefault();\n    this.addUser().then(response => {\n      this.props.stateRefresh();\n    });\n    this.setState({\n      id: '',\n      pass: '',\n      pass_confirm: '',\n      email: '',\n      name: '',\n      pass_same: false,\n      open: false\n    });\n  }\n\n  handleValueChange(e) {\n    let nextState = {};\n    nextState[e.target.name] = e.target.value;\n    this.setState(nextState);\n  }\n\n  handleClickOpen() {\n    this.setState({\n      open: true\n    });\n  }\n\n  handleClose() {\n    this.setState({\n      id: '',\n      pass: '',\n      pass_confirm: '',\n      email: '',\n      name: '',\n      pass_same: false,\n      open: false\n    });\n  }\n\n  addUser() {\n    if (this.state.pass !== this.state.pass_confirm) {\n      alert('비밀번호를 똑같이 입력해주세요');\n      this.setState({\n        pass_same: false\n      });\n    } else {\n      this.setState({\n        pass_same: true\n      });\n    }\n\n    if (this.state.pass_same) {}\n\n    return post('api/users', {\n      id: this.state.id,\n      password: this.state.pass,\n      email: this.state.email,\n      name: this.state.name\n    }).then(response => {\n      console.log(response);\n    });\n  }\n\n  render() {\n    const classes = this.props.classes;\n    return React.createElement(\"div\", {\n      className: \"RegisterForm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: this.handleClickOpen,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }), React.createElement(\"form\", {\n      onSubmit: this.handleFormSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, \"\\uD68C\\uC6D0\\uAC00\\uC785\"), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"id\",\n      placeholder: \"id\",\n      value: this.state.id,\n      onChange: this.handleValueChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"password\",\n      name: \"pass\",\n      placeholder: \"password\",\n      value: this.state.pass,\n      onChange: this.handleValueChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"password\",\n      name: \"pass_confirm\",\n      placeholder: \"confirm your password\",\n      value: this.state.pass_confirm,\n      onChange: this.handleValueChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"email\",\n      name: \"email\",\n      placeholder: \"email\",\n      value: this.state.email,\n      onChange: this.handleValueChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"name\",\n      placeholder: \"name\",\n      value: this.state.name,\n      onChange: this.handleValueChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, \"\\uAC00\\uC785\\uD558\\uAE30\")));\n  }\n\n}\n\nexport default UserRegister;","map":{"version":3,"sources":["/Users/heonmac/GoogleDrive/WorkSpace/Web/mytoday/client/src/components/UserRegister.js"],"names":["React","Component","post","Dialog","DialogActions","DialogContent","DialogTitle","TextField","Button","withStyles","style","theme","hidden","display","UserRegister","constructor","props","state","id","pass","pass_confirm","email","name","pass_same","open","handleFormSubmit","bind","handleValueChange","addUser","e","preventDefault","then","response","stateRefresh","setState","nextState","target","value","handleClickOpen","handleClose","alert","password","console","log","render","classes"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {post} from 'axios'\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport { withStyles } from '@material-ui/core/styles';\n\n\nconst style = theme =>({\n    hidden:{\n        display:'none',\n    }\n})\n\n\nclass UserRegister extends Component{\n    constructor(props){\n        super(props);\n        this.state ={\n            id:'',\n            pass:'',\n            pass_confirm:'',\n            email:'',\n            name:'',\n            pass_same:false,\n            open:false,\n        }\n        this.handleFormSubmit = this.handleFormSubmit.bind(this)\n        this.handleValueChange = this.handleValueChange.bind(this)\n        this.addUser = this.addUser.bind(this)\n    }\n\n    handleFormSubmit(e){\n        e.preventDefault()\n        this.addUser().then((response)=>{\n            this.props.stateRefresh();\n        })\n        this.setState({\n            id:'',\n            pass:'',\n            pass_confirm:'',\n            email:'',\n            name:'',\n            pass_same:false,\n            open:false,\n        })\n    }\n\n    handleValueChange(e) {\n        let nextState = {};\n        nextState[e.target.name] = e.target.value;\n        this.setState(nextState);\n    }\n\n    handleClickOpen(){\n        this.setState({\n            open:true\n        });\n    }\n\n    handleClose(){\n        this.setState({\n            id:'',\n            pass:'',\n            pass_confirm:'',\n            email:'',\n            name:'',\n            pass_same:false,\n            open:false,\n        })\n    }\n    \n    addUser(){\n        if(this.state.pass !== this.state.pass_confirm){\n            alert('비밀번호를 똑같이 입력해주세요');\n            this.setState({pass_same : false});\n        }else{\n            this.setState({pass_same : true});\n        }\n        if(this.state.pass_same){\n \n        }\n        return post('api/users', {\n            id: this.state.id,\n            password: this.state.pass,\n            email : this.state.email,\n            name : this.state.name\n        }).then((response) =>{\n            console.log(response);\n        })\n    }\n\n    render(){\n        const{classes} = this.props;\n        return(\n            <div className='RegisterForm'>\n                <Button variant=\"contained\" color=\"primary\" onClick={this.handleClickOpen}>\n\n                </Button>\n                <form onSubmit={this.handleFormSubmit}>\n                    <h1>회원가입</h1>\n                    <input type=\"text\" name='id' placeholder='id' value={this.state.id} onChange={this.handleValueChange}></input>\n                    <input type=\"password\" name='pass' placeholder='password' value={this.state.pass} onChange={this.handleValueChange}></input>\n                    <input type=\"password\" name='pass_confirm' placeholder='confirm your password' value={this.state.pass_confirm} onChange={this.handleValueChange}></input>\n                    <input type=\"email\" name='email' placeholder='email' value={this.state.email}  onChange={this.handleValueChange}></input>\n                    <input type=\"text\" name='name' placeholder='name' value={this.state.name} onChange={this.handleValueChange}></input>\n                    <button type=\"submit\">가입하기</button>\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default UserRegister"]},"metadata":{},"sourceType":"module"}